buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
}

description = 'census-fwmt-acceptance-tests'

group = 'uk.gov.ons.census.fwmt'

version = '4.0.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    if (!project.hasProperty('omitSDCArtifactory')) {
        maven { url 'http://artifactory-sdc.onsdigital.uk/artifactory/libs-release' }
        maven { url 'http://artifactory-sdc.onsdigital.uk/artifactory/libs-snapshot' }
    }
    mavenCentral()
    mavenLocal()
}

configurations {
    jaxb
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber(dependsOn: testClasses) {
    doLast {
        javaexec {
            main = 'cucumber.api.cli.Main'
            classpath = configurations.testRuntimeClasspath + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'uk.gov.ons.census.fwmt.census-acceptance-tests', 'src/test/resources']
        }
    }
}

test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    systemProperties.remove("java.endorsed.dirs")
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "${projectDir}/src/test/resources/xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask',
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir) {
                produces(dir: sourcesDir, includes: '**/*.java')
                schema(dir: schema, includes: '**/*.xsd')
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: 'lines,vars,source',
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

dependencies {

    compile('uk.gov.ons.census.fwmt:census-fwmt-common:1.0.17-RELEASE')
    compile("uk.gov.ons.census.fwmt:census-fwmt-events:1.0.6-RELEASE")

    compile("com.google.guava:guava:27.0.1-jre")

    jaxb("javax.xml.bind:jaxb-api:2.3.0")
    jaxb("com.sun.xml.bind:jaxb-core:2.3.0.1")
    jaxb("com.sun.xml.bind:jaxb-impl:2.3.1")
    jaxb("com.sun.xml.bind:jaxb-xjc:2.3.1")
    jaxb("javax.activation:activation:1.1.1")
    compile("javax.xml.bind:jaxb-api:2.3.0")
    compile("com.sun.xml.bind:jaxb-core:2.3.0.1")
    compile("com.sun.xml.bind:jaxb-impl:2.3.1")
    compile("com.sun.xml.bind:jaxb-xjc:2.3.1")
    compile("javax.activation:activation:1.1.1")

    compile(files((String) genJaxb.classesDir).builtBy(genJaxb))

    compile("org.projectlombok:lombok:1.18.4")
    annotationProcessor("org.projectlombok:lombok:1.18.4")

    testCompile("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-test:${springBootVersion}")
    testCompile("org.springframework.retry:spring-retry:1.2.2.RELEASE")
    testCompile("org.springframework:spring-web:5.1.2.RELEASE")
    testCompile("org.springframework:spring-aop:5.1.2.RELEASE")

    compile("org.json:json:20180813")

    testCompile("com.fasterxml.jackson.core:jackson-databind:2.9.7")
    testCompile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7")

    testCompile("org.apache.httpcomponents:httpclient:4.5.6")


    testCompile("org.springframework:spring-test:5.1.2.RELEASE")

    testCompile("io.cucumber:cucumber-java:4.0.2")
    testCompile("io.cucumber:cucumber-junit:4.0.2")
    testCompile("io.cucumber:cucumber-spring:4.0.2")
    testCompile("org.assertj:assertj-core:3.11.1")


    testCompile("org.projectlombok:lombok:1.18.4")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.4")
}
